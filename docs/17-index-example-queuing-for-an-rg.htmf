<!-- <h1 class="appendix new-page appendix1 display-none" id="sec:example-queuing-for-an-rg">Appendix II: Example Queuing for an RG<a class="headerlink" href="17-index-example-queuing-for-an-rg.html#sec:example-queuing-for-an-rg" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h1> -->

<p>This section presents the queuing and scheduling discipline envisioned
for upstream traffic through the RG in support of future service
offerings delivered over the architecture described in TR-059.</p>

<figure>
<img src="images/figure-5.png" id="fig:queuing-and-scheduling" alt=""/>
<figcaption>Figure 5: Upstream Queuing and Scheduling Example for RG<a class="headerlink" href="17-index-example-queuing-for-an-rg.html#fig:queuing-and-scheduling" title="Permalink to this figure"> <img src='permalink.png' title='' width="0.8em"/></a></figcaption>
</figure>

<p>In Figure 5, the following abbreviations apply:</p>

<p>ASP – Application service provider</p>

<p>PTA – PPP terminated aggregation</p>

<p>PPP – Point-to-point protocol</p>

<p>EF – Expedited forwarding – as defined in IETF RFC 3246</p>

<p>AF – Assured forwarding – as defined in IETF RFC 2597</p>

<p>BE – Best effort forwarding</p>

<p>RL – Rate limiter</p>

<p>∑RL – Summing rate limiter (limits multiple flows)</p>

<p>S – Scheduler</p>

<p>Multiple access sessions are supported in this model. However, all
traffic is classified and scheduled in a monolithic system. So, while it
might appear at first that the Diffserv queuing and scheduling might
apply only to IP-aware access, in fact all access, IP, Ethernet, or PPP
is managed by the same system that adheres to the Diffserv model.</p>

<p>For example, at the bottom of Figure 5, BE (best effort) treatment is
given to the non-IP-aware access sessions (PPPoE started behind the RG
or delivered to an L2TP tunnel delivery model). This queue might be
repeated several times in order to support fairness among multiple PPPoE
accesses, or it might be a monolithic queue with separate rate limiters
applied to the various access sessions.</p>

<p>The PTA access is a single block of queues. This is done because NSP
access typically works with a single default route to the NSP, and
managing more than one simultaneously at the RG would be perilous. The ∑
rate limiter would limit the overall access traffic for a service
provider.</p>

<p>Rate limiters are also shown within the EF and AF service classes
because the definition of those diffserv types is based on treating the
traffic differently when it falls into various rates.</p>

<p>Finally, at the top of the diagram is the ASP access block of queues. In
phase 1A of the TR-059 architecture, these queues are provisioned and
provide aggregate treatment of traffic mapped to them. In phase 1B, it
will become possible to assign AF queues to applications to give them
specific treatment instead of aggregate treatment. The EF service class
may also require a high degree of coordination among the applications
that make use of it so that its maximum value is not exceeded.</p>

<p>Notable in this architecture is that all the outputs of the EF, AF, and
BE queues are sent to a scheduler (S) that pulls traffic from them in a
strict priority fashion. In this configuration EF traffic is, obviously,
given highest precedence and BE is given the lowest. The AF service
classes fall in between.</p>

<p>Note that there is significant interest in being able to provide a
service arrangement that would allow general Internet access to have
priority over other (bulk rate) services.<a id="fnref1" href="99-index-footnotes.html#fn1"><sup>1</sup></a> Such an arrangement would
be accomplished by assigning the bulk rate service class to BE and by
assigning the default service class (Internet access) as AF with little
or no committed information rate.</p>

<p>Given this arrangement, the precedence of traffic shown in the figure is
arranged as:</p>

<p>EF – red dotted line</p>

<p>AF – blue dashed line (with various precedence among AF classes as
described in IETF RFC 2597)</p>

<p>BE – black solid line</p>

